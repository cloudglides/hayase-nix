name: Update Hayase Package

on:
  repository_dispatch:
    types: [hayase_release]
  workflow_dispatch: # Allow manual trigger
  push:
    branches:
      - main
    paths:
      - 'package.nix'
      - 'flake.nix'
      - '.github/workflows/update.yml'

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Enable Cachix
        uses: cachix/cachix-action@v14
        with:
          name: cloudglides
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Get latest Hayase release
        id: latest_release
        run: |
          LATEST=$(curl -s https://api.github.com/repos/hayase-app/ui/releases/latest | jq -r '.tag_name')
          echo "version=${LATEST#v}" >> $GITHUB_OUTPUT
          echo "tag=$LATEST" >> $GITHUB_OUTPUT

      - name: Check current version
        id: current_version
        run: |
          CURRENT=$(grep 'version = ' package.nix | sed 's/.*"\(.*\)".*/\1/')
          echo "version=$CURRENT" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          if [ "${{ steps.latest_release.outputs.version }}" != "${{ steps.current_version.outputs.version }}" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "New version available: ${{ steps.latest_release.outputs.version }}"
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "Already up to date"
          fi

      - name: Download new AppImage to get hash
        if: steps.compare.outputs.needs_update == 'true'
        id: download
        run: |
          VERSION="${{ steps.latest_release.outputs.version }}"
          URL="https://github.com/hayase-app/ui/releases/download/v${VERSION}/linux-hayase-${VERSION}-linux.AppImage"
          
          wget -q "$URL" -O hayase.AppImage
          HASH=$(nix-hash --type sha256 --flat hayase.AppImage | xargs nix hash to-sri --type sha256)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          rm hayase.AppImage

      - name: Update package.nix
        if: steps.compare.outputs.needs_update == 'true'
        run: |
          VERSION="${{ steps.latest_release.outputs.version }}"
          HASH="${{ steps.download.outputs.hash }}"
          
          sed -i "s/version = \".*\";/version = \"$VERSION\";/" package.nix
          sed -i "s|hash = \"sha256-.*\";|hash = \"$HASH\";|" package.nix

      - name: Test build
        if: steps.compare.outputs.needs_update == 'true'
        run: |
          nix build .#default

      - name: Create Pull Request
        if: steps.compare.outputs.needs_update == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update hayase to ${{ steps.latest_release.outputs.version }}"
          title: "Update Hayase to ${{ steps.latest_release.outputs.version }}"
          body: |
            ## Automated Update
            
            Updates Hayase from ${{ steps.current_version.outputs.version }} to ${{ steps.latest_release.outputs.version }}
            
            - New version: `${{ steps.latest_release.outputs.version }}`
            - Release: https://github.com/hayase-app/ui/releases/tag/${{ steps.latest_release.outputs.tag }}
            - New hash: `${{ steps.download.outputs.hash }}`
            
            Build tested successfully.
          branch: update-hayase-${{ steps.latest_release.outputs.version }}
          delete-branch: true
          labels: automated, dependencies
